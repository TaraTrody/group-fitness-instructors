{"version":3,"sources":["../../../src/server/controllers/user.controllers.js"],"names":["create","req","res","next","console","log","body","newUser","User","save","err","result","status","json","error","errorHandler","getErrorMessage","message","list","find","user","select","userByID","ID","findById","exec","profile","read","update","_","extend","updated","Date","now","hashed_password","undefined","remove","deleteOne","deletedUser"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport User from '../db/models/user.model'\nimport errorHandler from '../utils/dbErrorHandler'\n\nconst create = (req, res, next) => {\n  console.log(req.body)\n  const newUser = new User(req.body)\n  \n  newUser.save((err, result) => {\n    if (err) {\n      return res.status(400).json({\n        error: errorHandler.getErrorMessage(err)\n      })\n    }\n    res.status(200).json({\n      message: 'Successfully signed up!'\n    })\n  }\n  )\n}\n\nconst list = (req, res) => {\n  User.find((err, user) => {\n    if (err) {\n      return res.status(400).json({\n        error: errorHandler.getErrorMessage(err)\n      })\n    }\n    res.json(user)\n  }).select('-hashed_password')\n}\n\nconst userByID = (req, res, next, ID) => {\n  User.findById().exec((err, user) => {\n    if (err || !user) {\n      return res.status(400).json({\n        error: 'User not found'\n      })\n    }\n    req.profile = user\n    next()\n  })\n}\n\nconst read = (req, res) => {\n  return res.json(req.profile)\n}\n\nconst update = (req, res, next) => {\n  let user = req.profile\n  user = _.extend(user, req.body)\n  user.updated = Date.now()\n  user.save((err) => {\n    if (err) {\n      return res.status(400).json({\n        error: errorHandler.getErrorMessage(err)\n      })\n    }\n    user.hashed_password = undefined\n    res.json({\n      message: 'User account updated',\n      user\n    })\n  })\n}\n\nconst remove = (req, res, next) => {\n  let user = req.profile\n  user.deleteOne((err, deletedUser) => {\n    if (err) {\n      return res.status(400).json({\n        error: errorHandler.getErrorMessage(err)\n      })\n    }\n    user.hashed_password = undefined\n    res.json({\n      message: 'User account deleted',\n      deletedUser\n    })\n  }\n  )\n}\n\nexport default { create, list, userByID, read, update, remove }"],"file":"user.controllers.js"}