{"version":3,"sources":["../../../src/server/utils/dbErrorHandler.js"],"names":["getErrorMessage","err","message","code","getUniqueErrorMessage","errName","errors","output","fieldName","substring","lastIndexOf","charAt","toUpperCase","slice","ex"],"mappings":";;;;;;;AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAC/B,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,GAAG,CAACE,IAAR,EAAc;AACZ,YAAQF,GAAG,CAACE,IAAZ;AACE,WAAK,KAAL;AACA,WAAK,KAAL;AACED,QAAAA,OAAO,GAAGE,qBAAqB,CAACH,GAAD,CAA/B;AACA;;AACF;AACEC,QAAAA,OAAO,GAAG,sBAAV;AANJ;AAQD,GATD,MASO;AACL,SAAK,IAAIG,OAAT,IAAoBJ,GAAG,CAACK,MAAxB,EAAgC;AAC9B,UAAIL,GAAG,CAACK,MAAJ,CAAWD,OAAX,EAAoBH,OAAxB,EACEA,OAAO,GAAGD,GAAG,CAACK,MAAJ,CAAWD,OAAX,EAAoBH,OAA9B;AACH;AACF;;AACD,SAAOA,OAAP;AACD,CAlBD;;AAoBA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,GAAD,EAAS;AACrC,MAAIM,MAAJ;;AACA,MAAI;AACF,QAAIC,SAAS,GACbP,GAAG,CAACC,OAAJ,CAAYO,SAAZ,CAAsBR,GAAG,CAACC,OAAJ,CAAYQ,WAAZ,CAAwB,IAAxB,IAAgC,CAAtD,EACAT,GAAG,CAACC,OAAJ,CAAYQ,WAAZ,CAAwB,IAAxB,CADA,CADA;AAGAH,IAAAA,MAAM,GAAGC,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCJ,SAAS,CAACK,KAAV,CAAgB,CAAhB,CAApC,GAAyD,gBAAlE;AAED,GAND,CAME,OAAMC,EAAN,EAAU;AACVP,IAAAA,MAAM,GAAG,6BAAT;AACD;;AACD,SAAOA,MAAP;AACD,CAZD;;eAce;AAACP,EAAAA,eAAe,EAAfA;AAAD,C","sourcesContent":["const getErrorMessage = (err) => {\n  let message = ''\n  if (err.code) {\n    switch (err.code) {\n      case 11000:\n      case 11001:\n        message = getUniqueErrorMessage(err)\n        break;\n      default:\n        message = 'Something went wrong'\n    }\n  } else {\n    for (let errName in err.errors) {\n      if (err.errors[errName].message)\n        message = err.errors[errName].message\n    }\n  }\n  return message\n}\n\nconst getUniqueErrorMessage = (err) => {\n  let output\n  try {\n    let fieldName = \n    err.message.substring(err.message.lastIndexOf('.$') + 2,\n    err.message.lastIndexOf('_1'))\n    output = fieldName.charAt(0).toUpperCase() + fieldName.slice(1) + 'already exists'\n\n  } catch(ex) {\n    output = 'Unique field already exists'\n  }\n  return output\n}\n\nexport default {getErrorMessage}"],"file":"dbErrorHandler.js"}